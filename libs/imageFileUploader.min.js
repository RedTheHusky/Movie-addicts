let imageFileUploader={init:function(options={}){console.groupCollapsed('init');this.initDone=!0;this.statusLog={fileReadEvent:{status:0,file:"",converted:"",error:""},fileUploadEvent:{status:0,error:"",resolve:"",reject:""}};this.mode=1;console.groupEnd()},fileUppload:function(options={}){console.groupCollapsed('fileUppload');if(!this.initDone)this.init();let me=this;me.statusLog.fileReadEvent={status:0,file:"",converted:"",error:""};function errorcall(str=""){me.statusLog.fileReadEvent.status=-1;me.statusLog.fileReadEvent.error=str;if(typeof doAfterFailedConvertingImage2Base64!=="undefined"){try{doAfterFailedConvertingImage2Base64({obj:me,message:str})}
catch(err){console.warn('error at function call:',err)}}else{}}
var isError=!1;if(!options.element){console.warn("No element defined");errorcall("noElementDefined");return!1}
let element=options.element;if(element.tagName!="input"&&element.getAttribute("type")!="file"){console.warn("Invalid attributes");errorcall("invalidAttributes");return!1}
let input=element;if(input.files&&input.files[0]){let file=input.files[0];me.statusLog.fileReadEvent.file=file;if("path" in file){}
if("name" in file){}
if("size" in file){}
var allowedExtensions=/(\.jpg|\.jpeg|\.png|\.gif)$/i;if(allowedExtensions.exec(file.name)){}else{errorcall("fileExtensionInvalid");isError=!0}
if(!isError){var reader=new FileReader();reader.onload=function(e){console.groupCollapsed('fileRead');console.log('e.target.result.length=',e.target.result.length);if(me.mode===2||me.mode===3){me.statusLog.fileReadEvent.status=1;me.statusLog.fileReadEvent.converted=e.target.result;if(typeof doAfterSuccessConvertingImage2Base64!=="undefined"){console.log("trigger doAfterSuccessConvertingImage2Base64");try{doAfterSuccessConvertingImage2Base64({obj:me,file:file,result:e.target.result})}
catch(err){console.warn('error at function call:',err)}}else{console.log("use internal")}}
if(me.mode===1||me.mode===3){me.upload({file:file,result:e.target.result})}
console.groupEnd()};reader.readAsDataURL(file)}}else{console.warn("file not selected");errorcall("fileNotSelected");isError=!0}
console.groupEnd()},upload:function(data={}){console.groupCollapsed('upload');if(!this.initDone)this.init();let me=this;me.statusLog.fileUploadEvent={status:0,error:"",resolve:"",reject:""};if(!data||!data.result){console.warn("nothing to send!");me.statusLog.fileUploadEvent.status=-1;me.statusLog.fileUploadEvent.error="nothing2Send";returnl}
$.ajax({method:"POST",url:"https://goriest-fastener.000webhostapp.com/movie/imageUploader.php/upload",data:{img:data.result}}).done(function(resolve){me.statusLog.fileUploadEvent.status=1;me.statusLog.fileUploadEvent.resolve=resolve;if(typeof doAfterSuccessImageUpload!=="undefined"){try{doAfterSuccessImageUpload({obj:me,response:resolve})}
catch(err){console.warn('error at function call:',err)}}}).fail(function(reject){me.statusLog.fileUploadEvent.status=-1;me.statusLog.fileUploadEvent.error="rejected";me.statusLog.fileUploadEvent.reject=reject;if(typeof doAfterFailedImageUpload!=="undefined"){try{doAfterFailedImageUpload({obj:me,response:resolve})}
catch(err){console.warn('error at function call:',err)}}});console.groupEnd()}}