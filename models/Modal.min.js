class Modal{constructor(options={}){console.groupCollapsed('constructor');if(!(typeof options==='object')){options={}};function uuidv4(){return'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16)})}
this.root={id:'',dom:'',jquery:''};this.main={id:'',dom:'',jquery:''};this.main.id="modal_"+uuidv4();this.loaded={css:!0,js:!0};this.content=`<button type="button" id="${this.main.id}_toggle" class="btn btn-primary" style="display:none" data-toggle="modal" data-target="#${this.main.id}"></button>
		<div class="modal-dialog">
    
      <!-- Modal content-->
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal">&times;</button>
          <h4 class="modal-title" >Modal Header</h4>
        </div>
        <div class="modal-body" >
          <p>Some text in the modal.</p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
      </div>
      
    </div>`;console.log('options=',options);if(options.root){this.root.id=options.root;if(this.root.id){this.root.dom=document.querySelector(this.root.id);this.root.jquery=$(this.root.id)}
if(options.add2Root){this.add2Root(options.add2Root)}}
if(options.add2Head){this.add2Head(options.add2Head)}
if(options.loadMode&&(options.loadMode==="n"||options.loadMode===0)){this.loaded.css=!1;this.loaded.js=!1}
if(options.content){this.content=options.content}
console.groupEnd()}
add2Head(options={}){console.groupCollapsed('add2Head');if(!(typeof options==='object')){options={}};let loadMode='a';if(options.loadMode){loadMode=options.loadMode}
console.log('loadMode=',loadMode);let me=this;if(options.loadMode&&(options.loadMode==="n"||options.loadMode===0)){this.loaded.css=!0;this.loaded.js=!0}else if(options.loadMode&&(options.loadMode==="h"||options.loadMode===4)){this.loaded.css=!1;this.loaded.js=!1}
if(loadMode==='a'||loadMode==='c'||loadMode===1||loadMode===3){var css=document.createElement("link");css.href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css";css.setAttribute("rel","stylesheet");document.head.appendChild(css);if(css.addEventListener){css.addEventListener('load',function(){console.log("CSS Done");me.loaded.css=!0;if(options.callback&&me.loaded.js){options.callback()}},!1)}}
if(loadMode==='a'||loadMode==='s'||loadMode===1||loadMode===2){var script=document.createElement("script");script.src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js";document.head.appendChild(script);if(script.addEventListener){script.addEventListener('load',function(){console.log("script Done");me.loaded.js=!0;if(options.callback&&me.loaded.css){options.callback()}},!1)}}
console.groupEnd()}
add2Root(options={}){console.groupCollapsed('add2Root');if(!(typeof options==='object')){options={}};if(options.root){this.root.id=options.root;if(this.root.id){this.root.dom=document.querySelector(this.root.id);this.root.jquery=$(this.root.id)}}
console.log('root=',this.root);if($('#'+this.main.id)[0]){console.log("already exists->no adding is needed");console.groupEnd();return!1}
if(this.root.dom&&this.isElement(this.root.dom)){console.log('Dom element does exists');this.main.dom="";this.main.jquery="";this.main.dom=document.createElement("div");this.main.dom.classList.add("modal");this.main.dom.classList.add("fade");this.main.dom.setAttribute("id",this.main.id);this.main.dom.setAttribute("role","dialog");this.main.dom.innerHTML=this.content;this.root.dom.appendChild(this.main.dom);this.main.jquery=$('#'+this.main.id);console.log('Modal created');this.main.jquery.on('hidden.bs.modal',function(){console.log('Modal cleared if it contains a form');if($(this).find('form')&&$(this).find('form')[0]&&$(this).find('form')[0].reset){$(this).find('form')[0].reset()}})}else{console.warn('Dom element does not exists')}
console.groupEnd()}
removeModal4Root(){console.groupCollapsed('removeModal4Root');if(this.main.dom){this.main.dom.innerHTML="";this.main.dom.parentNode.removeChild(this.main.dom);this.main.dom="";this.main.jquery=""}
console.groupEnd()}
setElement(options=[]){console.groupCollapsed('setElement');if(!(typeof options==='object')){options=[]};if(!this.main.dom){console.warn('No modal to select');console.groupEnd();return}
console.log("options=",options);let me=this;options.forEach(function(option,index){console.groupCollapsed('option[',index,']');console.log('option=',option);if(option==="show"){me.show()}else if(option==="hide"){me.hide()}else if(option==="toggle"){me.toggle()}else if(!option.selector){console.warn('No selector for: ',index)}else if(!me.root.dom.querySelector(option.selector)){console.warn('No element for: ',index)}else{if(option.task==="inner"){me.main.dom.querySelector(option.selector).innerHTML=option.value}else if(option.task==="attribute-add"){me.main.dom.querySelector(option.selector).setAttribute(option.name,option.value)}else if(option.task==="attribute-remove"){me.main.dom.querySelector(option.selector).removeAttribute(option.name)}else if(option.task==="class-add"){me.main.dom.querySelector(option.selector).classList.add(option.value)}else if(option.task==="class-remove"){me.main.dom.querySelector(option.selector).classList.remove(option.value)}else{console.warn('No task for: ',index)}}
console.groupEnd()});console.groupEnd()}
checkifRead(option="a"){console.groupCollapsed('checkifRead');if(!(typeof option==='string')){option="a"};console.log("option=",option);if((option==="a"||option==="c")&&!this.loaded.css){console.warn("stylesheet not loaded");console.groupEnd();return!1}
if((option==="a"||option==="s")&&!this.loaded.js){console.warn("script not loaded");console.groupEnd();return!1}
if((option==="a"||option==="r")&&(!this.root.dom||!this.isElement(this.root.dom))){console.warn("no root defined");console.groupEnd();return!1}
if(!($('#'+this.main.id))){console.warn("no modal defined");console.groupEnd();return!1}
console.groupEnd();return!0}
toggle(option="toggle"){console.groupCollapsed('toggle');if(!(typeof option==='string')){option="toggle"};if(!this.checkifRead()){console.warn("not ready");console.groupEnd();return}
console.log('option=',option);if(option!="toggle"&&option!="show"&&option!="hide"){console.warn("not a valid option");console.groupEnd();return}
if(this.main.jquery&&this.main.jquery.modal){this.main.jquery.modal(option)}else{console.warn("No way to toggle it!")}
console.groupEnd()}
show(){console.groupCollapsed('show');this.toggle('show');console.groupEnd()}
hide(){console.groupCollapsed('hide');this.toggle('hide');console.groupEnd()}
isElement(o){var r=(typeof HTMLElement==="object"?o instanceof HTMLElement:o&&typeof o==="object"&&o!==null&&o.nodeType===1&&typeof o.nodeName==="string");return r}
getElements(selector=""){console.groupCollapsed('getElements');if(!(typeof selector==='string')){selector="toggle"};if(!this.main.dom){console.warn("There is no master dom to do querySelectorAll!");console.groupEnd();return[]}
let elements=this.main.dom.querySelectorAll(selector);console.log('elements=',elements);console.groupEnd();return elements}
get id(){console.log("get id");return this.main.id}
get dom(){console.log("get dom");return this.main.dom}
get jquery(){console.log("get jquery");return this.main.jquery}
setElement(options=[]){console.groupCollapsed('setElement');if(!(typeof options==='object')){options=[]};this.add2Root();if(!this.main.dom){console.warn('No modal to select');console.groupEnd();return}
console.log("options=",options);let me=this;options.forEach(function(option,index){if(option==="show"){me.show()}else if(option==="hide"){me.hide()}else if(option==="toggle"){me.toggle()}else if(!option.selector){console.warn('No selector for: ',index)}else if(!me.main.dom.querySelector(option.selector)){console.warn('No element for: ',index)}else{if(option.task==="inner"){me.main.dom.querySelector(option.selector).innerHTML=option.value}else if(option.task==="attribute-add"){me.main.dom.querySelector(option.selector).setAttribute(option.name,option.value)}else if(option.task==="attribute-remove"){me.main.dom.querySelector(option.selector).removeAttribute(option.name)}else if(option.task==="class-add"){me.main.dom.querySelector(option.selector).classList.add(option.value)}else if(option.task==="class-remove"){me.main.dom.querySelector(option.selector).classList.remove(option.value)}else{console.warn('No task for: ',index)}}});console.groupEnd()}
ifExists(selector=""){console.groupCollapsed('ifExists');if(!this.main.dom){console.warn('No modal to select');console.groupEnd();return!1}
console.log("selector=",selector);if(this.main.dom.querySelector(selector)){console.groupEnd();return!0}
console.warn('No such element');console.groupEnd();return!1}
create(options={}){console.log("create");this.add2Root(options)}}