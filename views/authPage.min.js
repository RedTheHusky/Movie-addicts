let widgetId=-1;let profile={mode:1,eye:0,protocol:'',mouseEye:0};let statusLog={inputError:[]};let settings={nameLength_min:6,nameLength_max:36,passwordLength_min:6,passwordLength_max:36,classList:{invalid:"error-content"}};let modalNotification;function displayLogIn(){inputClear();profile.mode=1;document.querySelectorAll('.register-group').forEach(function(element,index){element.style.display="none"});document.querySelectorAll('.register-input').forEach(function(element,index){element.value=""});document.querySelector('.menu-title').innerHTML="User Log In";document.querySelector('.bt-newuserOrback').innerHTML="New";document.querySelector('.bt-loginOrRegister').innerHTML="Log In"}
function displayRegister(){inputClear();profile.mode=2;if(profile.protocol!=="file:"){if(widgetId===-1){widgetId=grecaptcha.render('add_g-recaptcha_here',{'sitekey':'6LefgYEUAAAAAN1Loro_VTlFvcOcDvYfscJ1dlMH','callback':'recaptchaSuccess','expired-callback':'recaptchaExpired','error-callback':'recaptchaError'})}else{}}else{console.warn('Its not on network, disabling g-recaptcha requirement')}
document.querySelectorAll('.register-group').forEach(function(element,index){element.style.display="block"});document.querySelector('.menu-title').innerHTML="New User Register";document.querySelector('.bt-newuserOrback').innerHTML="Back";document.querySelector('.bt-loginOrRegister').innerHTML="Register"}
function eye2PasswordToggle(mode=0){if(mode===-1){profile.eye=!1}
if(mode===2||mode===20||mode===21){if(mode===20){profile.eye=!0}
if(mode===21){profile.eye=!1}
if(profile.eye){profile.eye=!1;document.querySelector('input[name="password"]').setAttribute('type','password');document.querySelector(".btn-eye2Password").classList.add("btn-warning");document.querySelector(".btn-eye2Password").classList.remove("btn-info");document.querySelector(".btn-eye2Password").classList.remove("btn-success")}else{profile.eye=!0;document.querySelector('input[name="password"]').setAttribute('type','text');document.querySelector(".btn-eye2Password").classList.remove("btn-warning");document.querySelector(".btn-eye2Password").classList.remove("btn-info");document.querySelector(".btn-eye2Password").classList.add("btn-success")}}else if(mode===1){if(!profile.eye){document.querySelector('input[name="password"]').setAttribute('type','text');document.querySelector(".btn-eye2Password").classList.remove("btn-warning");document.querySelector(".btn-eye2Password").classList.add("btn-info")}}else{if(!profile.eye){document.querySelector('input[name="password"]').setAttribute('type','password');document.querySelector(".btn-eye2Password").classList.add("btn-warning");document.querySelector(".btn-eye2Password").classList.remove("btn-info");document.querySelector(".btn-eye2Password").classList.remove("btn-success")}}}
function inputClear(){let me=this;document.querySelectorAll('.text-input').forEach(function(element,index){element.value="";element.classList.remove(settings.classList.invalid)})}
function inputKeyupCheckClear(){let me=this;document.querySelectorAll('.inputKeyupCheck').forEach(function(element,index){element.classList.remove(settings.classList.invalid)})}
function inputKeyupCheck(options={}){if(!options.element){console.warn('invali');return!1}
let result=!0;if(options.type){if(options.type==='name'){if(options.element.value.length<settings.nameLength_min){console.warn('name to small');options.element.classList.add(settings.classList.invalid);result=!1}else if(options.element.value.length>settings.nameLength_max){console.warn('name to big');options.element.classList.add(settings.classList.invalid);result=!1}else{options.element.classList.remove(settings.classList.invalid)}}else if(options.type==='password'){if(options.element.value.length<settings.passwordLength_min){console.warn('password to small');options.element.classList.add(settings.classList.invalid);result=!1}else if(options.element.value.length>settings.passwordLength_max){console.warn('password to big');options.element.classList.add(settings.classList.invalid);result=!1}else{options.element.classList.remove(settings.classList.invalid)}}else if(options.type==='email'){if(!validateEmail(options.element.value)){console.warn('invalid email');options.element.classList.add(settings.classList.invalid);result=!1}else{options.element.classList.remove(settings.classList.invalid)}}}
return result}
function validateEmail(email){var re=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;var result=re.test(String(email).toLowerCase());return result}
function inputCheck(){var errorLog=[];if(document.querySelector('input[name="username"]').value.length<settings.nameLength_min){console.warn('name too small');errorLog.push('name too small')}
if(document.querySelector('input[name="username"]').value.length>settings.nameLength_max){console.warn('name too big');errorLog.push('name too big')}
if(document.querySelector('input[name="password"]').value.length<settings.passwordLength_min){console.warn('password too small');errorLog.push('password too small')}
if(document.querySelector('input[name="password"]').value.length>settings.passwordLength_max){console.warn('password too big');errorLog.push('password too big')}
if(profile.mode===2){if(document.querySelector('input[name="inputConfirmPassword"]').value!=document.querySelector('input[name="password"]').value){console.warn('password not a match');errorLog.push('password not a match')}
if(!validateEmail(document.querySelector('input[name="email"]').value)){console.warn('email is not valid');errorLog.push('email is not valid')}
if(profile.protocol!=="file:"){if(!grecaptcha.getResponse()){console.warn('reCaptcha not verified');errorLog.push('reCaptcha not verified')}}else{console.warn('Its not on network, disabling g-recaptcha requirement')}}
statusLog.inputError=errorLog;if(errorLog.length>0){console.warn('has error, will not commence ajax');console.warn('errorLog=',errorLog);let errorMessage="";errorLog.forEach(function(e,i){errorMessage+=`<p>${e}</p>`});if(profile.mode===1){displayNotification({type:-1,title:"A problem at User Log In",body:"<p>The following problems have occurred:</p>"+errorMessage})}else if(this.profile.mode===2){displayNotification({type:-1,title:"A problem at New User Registering",body:"<p>The following problems have occurred:</p>"+errorMessage})}
console.warn('return:false');return!1}
return!0}
function callLogIn(){if(inputCheck()){var data={};data.username=document.querySelector('input[name="username"]').value;data.password=document.querySelector('input[name="password"]').value;statusLog.callResponse={status:0,mode:1,data:data,response:""};displayNotification({type:1,title:"LogIn",body:"<p>Please wait</p>"});Auth.userLogIn(data).then(function(resolve){statusLog.callResponse.status=1;statusLog.callResponse.response=resolve;doAfterSuccessResponse()},function(reject){statusLog.callResponse.status=-1;statusLog.callResponse.response=reject;reject.called="Log in";doAfterRejectedResponse(reject)})}else{console.warn('aborded')}}
function callRegister(){if(inputCheck()){var data={};data.username=document.querySelector('input[name="username"]').value;data.password=document.querySelector('input[name="password"]').value;displayNotification({type:1,title:"Register",body:"<p>Please wait</p>"});statusLog.callResponse={status:0,mode:2,data:data,response:""};Auth.userRegister(data).then(function(resolve){statusLog.callResponse.status=1;statusLog.callResponse.response=resolve;doAfterSuccessResponse()},function(reject){reject.called="Register";statusLog.callResponse.status=-1;statusLog.callResponse.response=reject;doAfterRejectedResponse(reject)})}else{console.warn('aborded')}}
function doAfterSuccessResponse(){location.assign("home.html")}
function doAfterRejectedResponse(response=""){if(response.status){console.warn('status:',response.status)}
let errorMessage;if(response.responseJSON&&response.responseJSON.message){errorMessage=response.responseJSON.message}else if(response.message){errorMessage=response.message}
if(profile.mode===1){displayNotification({type:-1,title:"A problem at User Log In",body:"<p>The following problems have occurred:</p>"+errorMessage})}else if(profile.mode===2){displayNotification({type:-1,title:"A problem at New User Registering",body:"<p>The following problems have occurred:</p>"+errorMessage})}}
function displayNotification(options={}){modalNotification.setElement([{selector:".modal-title",task:"inner",value:options.title||"(unknown)"},{selector:".modal-body",task:"inner",value:options.body||"(unknown)"},"show"])}
function addEvents(){document.querySelector('.bt-back').addEventListener("click",function(event){event.preventDefault();history.back()});document.querySelector(".btn-eye2Password").addEventListener("click",function(event){event.preventDefault();eye2PasswordToggle(2)});document.querySelector(".bt-newuserOrback").addEventListener("click",function(event){event.preventDefault();if(profile.mode===1){displayRegister()}else{displayLogIn()}});document.querySelector(".bt-loginOrRegister").addEventListener("click",function(event){event.preventDefault();if(profile.mode===1){callLogIn()}else{callRegister()}});function inputKeyupEvent(element){element.addEventListener("keyup",function(event){if(element.name.toLowerCase().includes("password")){inputKeyupCheck({element:element,type:'password'})}else if(element.name.toLowerCase().includes("name")){inputKeyupCheck({element:element,type:'name'})}else if(element.name.toLowerCase().includes("email")){inputKeyupCheck({element:element,type:'email'})}})}
document.querySelectorAll('.inputKeyupCheck').forEach(function(element,index){inputKeyupEvent(element)});document.querySelector(".btn-eye2Password").addEventListener("mouseover",function(event){event.preventDefault();profile.mouseEye=!0;eye2PasswordToggle(1)});document.querySelector(".btn-eye2Password").addEventListener("mouseleave",function(event){event.preventDefault();profile.mouseEye=!1;eye2PasswordToggle(0)});document.querySelector("input[name='username']").addEventListener("keyup",function(event){if(event.keyCode===13&&inputKeyupCheck({element:this,type:"name"})){if(profile.mode===2){document.querySelector("input[name='email']").focus()}else{document.querySelector("input[name='password']").focus()}}});document.querySelector("input[name='password']").addEventListener("keyup",function(event){if(event.keyCode===13&&inputKeyupCheck({element:this,type:"password"})){if(profile.mode===2){document.querySelector("input[name='inputConfirmPassword']").focus()}else{document.querySelector(".bt-loginOrRegister").focus()}}});document.querySelector("input[name='email']").addEventListener("keyup",function(event){if(event.keyCode===13&&inputKeyupCheck({element:this,type:"password"})){document.querySelector("input[name='password']").focus()}});document.querySelector("input[name='inputConfirmPassword']").addEventListener("keyup",function(event){if(event.keyCode===13&&inputKeyupCheck({element:this,type:"password"})){}})}
function init(){profile.protocol=location.protocol;modalNotification=new Modal({root:"modalRoot",addModal2Root:!0,});addEvents()}
init()